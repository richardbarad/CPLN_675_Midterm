ggplot()+
geom_sf(data=floodtest1,aes(fill=type),color='transparent')+
scale_fill_discrete(name='result type')+
theme_void()+
ggtitle('Results for Calgary Test Set'),
ggplot()+
geom_sf(data=grid7,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Calgary'),
ggplot()+
geom_sf(data=grid6_den,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Denver')
)
grid.arrange(nrow=1,
ggplot()+
geom_sf(data=floodtest1,aes(fill=type),color='transparent')+
scale_fill_manual(values=c('grey50','lightblue','lightgreen','purple'),name='',labels=c('False Negative','False Positive','True Negative','True Positive'))+
theme_void()+
ggtitle('Results for Calgary Test Set'),
ggplot()+
geom_sf(data=grid7,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Calgary'),
ggplot()+
geom_sf(data=grid6_den,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Denver')
)
grid.arrange(nrow=1,
ggplot()+
geom_sf(data=floodtest1,aes(fill=type),color='transparent')+
scale_fill_manual(values=c('grey50','blue','lightgreen','purple'),name='',labels=c('False Negative','False Positive','True Negative','True Positive'))+
theme_void()+
ggtitle('Results for Calgary Test Set'),
ggplot()+
geom_sf(data=grid7,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Calgary'),
ggplot()+
geom_sf(data=grid6_den,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Denver')
)
grid.arrange(nrow=1,
ggplot()+
geom_sf(data=floodtest1,aes(fill=type),color='transparent')+
scale_fill_manual(values=c('grey50','blue','lightgreen','purple'),name='',labels=c('False Negative','False Positive','True Negative','True Positive'))+
theme_void()+
ggtitle('Results for Calgary Test Set'),
ggplot()+
geom_sf(data=grid7,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Calgary')
)
ggplot()+
geom_sf(data=grid6_den,aes(fill=outcome),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()+
ggtitle('Predictions for Denver')
knitr::opts_chunk$set(echo = TRUE)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
library(sf)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs)+
geom_histogram(bins=100)
View(classProbs)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100)+
theme_bw()
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,color='orange')+
theme_bw()
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,fill='orange')+
theme_bw()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,fill='orange')+
theme_bw()+
ylab('Count')
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,fill='orange')+
theme_bw()+
ylab('Count')+
xlab('Probability')
knitr::opts_chunk$set(echo = TRUE)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
library(sf)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
classProbs <- predict(floodModel, floodTest, type="response") %>% as.data.frame()
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,fill='orange',color='grey90')+
theme_bw()+
ylab('Count')+
xlab('Probability')
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram(fill='orange',color='grey90',bins=100) +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
theme_bw()
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
View(matrix)
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No Flood' = '0', 'Flood' = '1') %>%
mutate(Total = Pass + Fail,
Prediction = c('No Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No Flood + Flood,
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
View(matrix)
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
matrix$by_class
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
matrix$byClass
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
kbl() %>%
kable_classic()
matrix$byClass %>%
data.frame() %>%
kbl() %>%
kable_classic() %>%
head(2)
matrix$byClass %>%
data.frame() %>%
head(2) %>%
kbl() %>%
kable_classic()
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
kbl() %>%
kable_classic()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
kbl() %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
colnames(c('Accuracy Metric','Value'))
matrix$byClass %>%
data.frame() %>%
colnames(c('Accuracy Metric','Value')) %>%
head(2) %>%
kbl() %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal()
t<- matrix$byClass %>%
data.frame()
View(t)
t <- matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(. = Value)
t <- matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(Value = .)
t <- matrix$byClass %>%
data.frame() %>%
head(2)
View(t)
t <- matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(Value = .)
View(t)
t <- matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .)
View(t)
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(value*100,2)) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2)) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal()
testProbs$predClass <- ifelse(testProbs$pred > .12 ,1,0)
matrix <- caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2)) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal()
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2)) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal() %>%
kable_styling(full_width = F)
matrix$table %>%
data.frame() %>%
spread(key=Reference,value=Freq) %>%
rename('No_Flood' = '0', 'Flood' = '1') %>%
mutate(Total = No_Flood + Flood,
Prediction = c('No_Flood','Flood')) %>%
kbl() %>%
add_header_above(header=c(" " = 1,"Actual" = 2," " = 1)) %>%
kable_minimal() %>%
kable_styling(full_width = F)
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2)) %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal() %>%
kable_styling(full_width = F)
t<- matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2))
View(t)
matrix$byClass %>%
data.frame() %>%
head(2) %>%
rename(.,Value = .) %>%
mutate(Value = round(Value*100,2)) %>%
row.names('Correctly Predicted Flood Cells','Correctly Predicted Non Flooded Cells') %>%
kbl(col.names = c('Accuracy Metric','Value')) %>%
kable_minimal() %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
calgary_boundary <- st_read('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp') %>% st_transform('EPSG:3780')
inundation <- rast('Data/calgary/inundation/w001001.adf')
inundation <- project(inundation,'EPSG:3780') #Project innundation raster into correct cordinate system
grid <- st_make_grid(calgary_boundary,100,square=TRUE) %>%
st_sf() %>%
mutate(ID = row_number())
# Get just grid squares with centroid in Calgary city limits
grid <- grid %>%
st_centroid() %>%
st_join(.,calgary_boundary,join = st_intersects,left=FALSE) %>%
st_drop_geometry() %>%
left_join(.,grid,by='ID') %>%
st_as_sf() %>%
mutate(ID = row_number()) %>%
select(ID)
# Count the number of inundation cells in each grid square in fishnet
extract_values <- extract(inundation, grid) %>% #Assign each raster pixel to a grid square
group_by(ID,w001001) %>% tally() %>%
ungroup() %>%
pivot_wider(id_cols=ID,names_from=w001001,values_from=n) %>%
replace(is.na(.), 0) %>% #Replace NA with 0
filter(`NA` == 0) %>% #Filter out grid squares that do not have inundation data
# 1 and 2 are inundation, sum those together and sum 0 and 3 together for non_inundation
mutate(innundation = `1` + `2`,
non_innundate = `0` + `3` + `NA`,
in_id = as.factor(ifelse(innundation/(innundation + non_innundate) > 0.25,1,0))) %>% #If grid square is more than 25% inundate consider it inundate (i.e: 1)
select(ID,in_id)
grid2 <- right_join(grid,extract_values,by='ID')
# Make Map of inundated areas
ggplot()+
geom_sf(data=grid2,aes(fill=in_id),color='transparent')+
scale_fill_manual(values=c('#fc9c9c','lightblue'),name='',labels=c('No Flood','Flood'))+
theme_void()
dem <- rast('Data/calgary/calgarydem/w001001.adf')
dem <- project(dem,'EPSG:3780')
elevation_extract <- terra::extract(dem,grid2,fun='mean',na.rm=TRUE) %>%
rename(elevation_mean = w001001) %>%
mutate(elevation = elevation_mean - min(elevation_mean))
View(testProbs)
testProbs <- data.frame(obs = as.factor(floodTest$in_id),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .,scales = 'free') +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dark blue", "dark green"),
labels = c("Not flooded","flooded"),
name = "")+
theme_bw()
testProbs <- data.frame(obs = as.factor(floodTest$in_id),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .,scales = 'free') +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dark blue", "dark green"),
labels = c("Not flooded","flooded"),
name = "")+
theme_bw()
View(testProbs)
testProbs <- data.frame(obs = as.factor(floodTest$in_id),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .,scales = 'free') +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dark blue", "dark green"),
labels = c("Not flooded","flooded"),
name = "")+
theme_bw()
classProbs <- predict(floodModel, floodTest, type="response") %>% data.frame(row.names = c('pred'))
classProbs <- predict(floodModel, floodTest, type="response") %>% data.frame(col.names = c('pred'))
ggplot(data=classProbs,aes(.))+
geom_histogram(bins=100,fill='orange',color='grey90')+
theme_bw()+
ylab('Count')+
xlab('Probability')
View(classProbs)
classProbs <- predict(floodModel, floodTest, type="response") %>% data.frame(col.names = c(pred))
classProbs <- predict(floodModel, floodTest, type="response") %>% data.frame(col.names = c(pred))
classProbs <- predict(floodModel, floodTest, type="response") %>% data.frame %>% setNames(.,c('pred'))
View(classProbs)
ggplot(data=classProbs,aes(y=pred))+
geom_histogram(bins=100,fill='orange',color='grey90')+
theme_bw()+
ylab('Count')+
xlab('Probability')
ggplot(data=classProbs,aes(x=pred))+
geom_histogram(bins=100,fill='orange',color='grey90')+
theme_bw()+
ylab('Count')+
xlab('Probability')
testProbs <- data.frame(obs = as.factor(floodTest$in_id),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .,scales = 'free') +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dark blue", "dark green"),
labels = c("Not flooded","flooded"),
name = "")+
theme_bw()
library(sf)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
