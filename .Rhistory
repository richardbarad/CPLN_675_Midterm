knitr::opts_chunk$set(echo = TRUE)
poly -> st_read("Data/denver")
poly -> st_read("Data\denver\county_boundary_lines.shp")
poly -> st_read("Data/denver/county_boundary_lines.shp")
poly <- st_read("Data/denver/county_boundary_lines.shp")
library(raster)
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
library(raster)
library(dplyr)
library(tidyr)
library(readr)
library(sf)
library(terra)
library(kableExtra)
library(terra)
library(exactextractr)
poly <- st_read("Data/denver/county_boundary_lines.shp")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
calgary_boundary <- read_file('Data/calgary/CALGIS_CITYBOUND_LIMIT')
calgary_boundary <- read_file('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp')
calgary_boundary <- st_read('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp')
calgary_boundary <- st_read('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp')
inundation <- rast('Data/calgary/inundation/w001001.adf')
st_crs(calgary_boundary)
crs(inundation)
inundation <- project(rast,st_crs(calgary_boundary))
inundation <- project(inundation,st_crs(calgary_boundary))
calgary_boundary <- st_read('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp') %>% st_transform('EPSG:3780')
inundation <- project(inundation,'EPSG:3780')
grid <- st_make_grid(calgary_boundary,100,square=TRUE)
ggplot()+
geom_sf(data=grid)+
geom_sf(data=calgary_boundary)
ggplot()+
geom_sf(data=grid,fill='transparent')+
geom_sf(data=calgary_boundary,fill='transparent',color='red')
View(grid)
grid <- st_make_grid(calgary_boundary,1000,square=TRUE)
ggplot()+
geom_sf(data=grid,fill='transparent')+
geom_sf(data=calgary_boundary,fill='transparent',color='red')
grid <- st_make_grid(calgary_boundary,200,square=TRUE)
ggplot()+
geom_sf(data=grid,fill='transparent')+
geom_sf(data=calgary_boundary,fill='transparent',color='red')
grid <- st_make_grid(calgary_boundary,200,square=TRUE) %>%
st_as_sf() %>%
consecutive_id()
ggplot()+
geom_sf(data=grid,fill='transparent')+
geom_sf(data=calgary_boundary,fill='transparent',color='red')
grid <- st_make_grid(calgary_boundary,200,square=TRUE) %>%
st_as_sf()
View(grid)
grid <- st_make_grid(calgary_boundary,200,square=TRUE)
grid <- st_make_grid(calgary_boundary,200,square=TRUE) %>%
st_sf()
grid <- st_make_grid(calgary_boundary,200,square=TRUE) %>%
st_sf() %>%
consecutive_id()
grid <- st_make_grid(calgary_boundary,200,square=TRUE) %>%
st_sf() %>%
mutate(ID = row_number())
View(grid)
library(mapview)
mapview(grid)
knitr::opts_chunk$set(echo = TRUE)
water <- st_read('Data/calgary/Hydrology_20240320.geojson') %>% st_transform('EPSG:3780')
library(sf)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(tidyverse)
library(terra)
library(kableExtra)
library(tigris)
library(viridis)
library(gridExtra)
calgary_boundary <- st_read('Data/calgary/CALGIS_CITYBOUND_LIMIT/CALGIS_CITYBOUND_LIMIT.shp') %>% st_transform('EPSG:3780')
inundation <- rast('Data/calgary/inundation/w001001.adf')
inundation <- project(inundation,'EPSG:3780') #Project innundation raster into correct cordinate system
grid <- st_make_grid(calgary_boundary,100,square=TRUE) %>%
st_sf() %>%
mutate(ID = row_number())
# Get just grid squares with centroid in Calgary city limits
grid <- grid %>%
st_centroid() %>%
st_join(.,calgary_boundary,join = st_intersects,left=FALSE) %>%
st_drop_geometry() %>%
left_join(.,grid,by='ID') %>%
st_as_sf() %>%
mutate(ID = row_number()) %>%
select(ID)
# Count the number of innundation cells in each grid square in fishnet
extract_values <- extract(inundation, grid) %>% #Assign each raster pixel to a grid square
group_by(ID,w001001) %>% tally() %>%
ungroup() %>%
pivot_wider(id_cols=ID,names_from=w001001,values_from=n) %>%
replace(is.na(.), 0) %>% #Replace NA with 0
filter(`NA` == 0) %>% #Filter out grid squares that do not have innundation data
# 1 and 2 are innundation, sum thoose together and sum 0 and 3 together for non_inundation
mutate(innundation = `1` + `2`,
non_innundate = `0` + `3` + `NA`,
in_id = as.factor(ifelse(innundation/(innundation + non_innundate) > 0.25,1,0))) %>% #If grid square is more than 25% innundate consider it innunduate (i.e: 1)
select(ID,in_id)
grid2 <- right_join(grid,extract_values,by='ID')
# Make Map of innudated areas
ggplot()+
geom_sf(data=grid2,aes(fill=in_id),color='transparent')+
theme_void()
dem <- rast('Data/calgary/calgarydem/w001001.adf')
dem <- project(dem,'EPSG:3780')
elevation_extract <- terra::extract(dem,grid2,fun='mean',na.rm=TRUE) %>%
rename(elevation_mean = w001001) %>%
mutate(elevation = elevation_mean - min(elevation_mean))
grid3 <- cbind(grid2,elevation_extract %>% select(elevation))
permiable <- st_read('Data/calgary/local_land_Cover/landcover.shp') %>%
filter(ldscmetric != 'Impermable') %>%
st_transform('EPSG:3780')
grid_perm_int <- st_intersection(grid3,permiable)
grid_perm_int <- grid_perm_int %>%
mutate(area = round(as.numeric(st_area(grid_perm_int)),2)) %>%
st_drop_geometry() %>%
group_by(ID) %>% summarise(perm_area = sum(area))
grid4 <- left_join(grid3,grid_perm_int,by='ID') %>%
mutate(perm_area = replace_na(perm_area,0),
pct_perm = round(perm_area/as.numeric(st_area(.))*100,2)) %>%
select(-perm_area)
rm(grid_perm_int)
land_cover1 <- rast('Data/calgary/worldcover/ESA_WorldCover_10m_2020_v100_N48W114_Map.tif')
land_cover2 <- rast('Data/calgary/worldcover/ESA_WorldCover_10m_2020_v100_N48W117_Map.tif')
land_cover3 <- rast('Data/calgary/worldcover/ESA_WorldCover_10m_2020_v100_N51W114_Map.tif')
land_cover4 <- rast('Data/calgary/worldcover/ESA_WorldCover_10m_2020_v100_N51W117_Map.tif')
calgary_land_cover <- terra::merge(land_cover1,land_cover2,land_cover3,land_cover4) #Merge together all tiles that overlap Calgary
calgary_land_cover2 <- crop(calgary_land_cover, calgary_boundary %>% st_transform('EPSG:4326')) #Crop Raster to Calgary
grid5 <- grid4 %>% st_transform('EPSG:4326') #Project grid so that I do not have to project the raster
mode <- function(class){
which.max(tabulate(class))
}
# Extract raster values within each polygon
land_cover_values <- extract(calgary_land_cover2, grid5) %>%
rename(landcover = ESA_WorldCover_10m_2020_v100_N48W114_Map) %>%
group_by(ID) %>% summarise(landcover_mode = mode(landcover)) %>%
ungroup() %>%
select(landcover_mode)
grid6 <- cbind(grid5,land_cover_values) %>%
st_transform('EPSG:3780') %>%
mutate(landcover_mode = as.factor(landcover_mode))
water <- st_read('Data/calgary/Hydrology_20240320.geojson') %>% st_transform('EPSG:3780')
centroid <- grid6 %>%
st_centroid()
nearest_feat <- st_nearest_feature(centroid,water)
grid6$water_dist <- as.double(st_distance(centroid, water[nearest_feat,], by_element=TRUE))
View(grid6)
ggplot()+
geom_sf(data=grid6,aes(fill=water_dist))
ggplot()+
geom_sf(data=grid6,aes(fill=water_dist),color='transparent')
ggplot()+
geom_sf(data=water,fill='lightblue',color='transparent')+
geom_sf(data=grid6,aes(fill=water_dist),color='transparent')+
scale_fill_viridis()
ggplot()+
geom_sf(data=grid6,aes(fill=water_dist),color='transparent')+
geom_sf(data=water,fill='lightblue',color='transparent')+
scale_fill_viridis(option='rocket')
save.image("C:/Users/richa/GitHub/CPLN_675_Midterm/.RData")
rm(calgary_land_cover3)
rm(calgary_land_cover4)
rm(land_cover_extract)
View(grid6)
View(grid5)
